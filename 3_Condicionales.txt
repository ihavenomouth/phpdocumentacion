Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2022-10-18T23:30:50+02:00

====== 3 Condicionales ======

Los condicionales se utilizan para crear bifurcaciones en el código, de manera que una rama de la bifurcación se ejecutará si la condición especificada es cierta. 
Para establecer las condiciones se usarán los valores booleanos ''true'' y ''false''. En PHP se escriben habitualmente así, pero se pueden escribir en mayúsculas, minúsculas o mezcla de ambas.


===== Instrucción if =====

Como en la mayoría de los lenguajes de programación, existe una estructura de control condicional que permite que se ejecute un trozo de código u otro en función de una condición.

**Tldr**: Como en el resto de los lenguajes de programación, pero usando ''elseif'' (escrito todo junto).

La estructura básica es la siguiente:
'''
if ( condición ) {
	// instrucciones que se ejecutan si la condición es cierta
}
'''


Si sólo hay una instrucción que ejecutar cuando la condición sea cierta, las llaves pueden obviarse.

También se puede indicar qué instrucciones se deben realizar en caso contrario:
'''
if ( condición ) {
	// instrucciones que se ejecutan si la condición es cierta
} else {
	// instrucciones que se ejecutan en caso contrario (si la condición es falsa)
}
'''

Y la estructura completa:
'''
if ( condición1 ) {
	// instrucciones que se ejecutan si la condición1 es cierta
} elseif ( condición2 ){
	// instrucciones que se ejecutan si la condición2 es cierta
} else {
	// instrucciones que se ejecutan en caso contrario (si la condición1 y la 2 son falsas)
}
'''

**Nota**: sólo se ejecutará una rama de ejecución las disponibles.


===== Operadores =====

Los operadores son:
	* ''&&''
	* ''||''
	* ''!''
	* ''>=''
	* ''<=''
	* ''>''
	* ''<''
	* ''==''
	* ''===''
	* ''!='' y ''<>''

El operador ''==='' devolverá ''true'' si ambos lados de la comparación tienen el mismo valor y el mismo dato. Si son datos complejos ''$a === $b'' devolverá true si ''$a'' y ''$b'' tienen pares clave/valor en el mismo orden y del mismo tipo de datos.

**Importante**: En Javascript también existe el operador ''==='', pero hay una diferencia: En Javascript la cadena ''"0"'' se considera cierto (el valor numérico ''0'' sí sería falso), pero en PHP ''"0"'' se convierte a ''0'' y por lo tanto es falso.

**Importante**: Se pueden usar ''<>'' y ''!='' con el mismo significado.

También está el //null coalescing operator// como en Javascript.
'''
$nom = null;
...
$nombre = $nom ?? 'Anónimo'; 
echo $nombre; // imprime Anónimo si $nom sigue siendo null
'''

Otro operador curioso es el spaceship ''<=>'', que devuelve ''-1'', ''0'' o ''1'' si los valores comparados (enteros, decimales o cadenas) son menor, igual o mayor respectivamente.

===== Sentencia switch/case y operador ternario =====

Al igual que en otros lenguajes de programación, también existe la sentencia switch/case:
'''
switch($animal) {
	case "gato": // Bloque 1
		echo "Es un mamífero.";
		echo "Es carnívoro.";
		break;
	case "oveja": // Bloque 2
		echo "Es un mamífero.";
		echo "Es hervíboro.";
		break;
	default: // Bloque 3
		echo "No es ni gato ni oveja.";
}
'''

Y por supuesto también tenemos un operador ternario que funciona como en el resto de lenguajes: ''condición ? valortrue : valorfalse;''


===== Ejercicios =====

**Ejercicio 1**: Escribe una aplicación web que muestre un formulario con un ''<select>'' en el que se pueda seleccionar un número del 1 al 7 y un botón de //Enviar//. Cuando el servidor reciba el valor seleccionado, escribirá el correspondiente nombre del día de la semana.

**Ejercicio 2:** Crea un aplicación web con un formulario en el que se pidan tres números. Antes de mandar los datos al servidor, haz una validación (los datos han de ser números enteros y entre 10 y 10000). Vuelve a realizar la validación de los datos recibidos por el servidor y haz que se muestren en orden de mayor a menor.

**Ejercicio 3:** Realiza una web para gestionar citas para un karaoke que muestre un ''<select>'' donde elegir la hora (los valores van de ''1'' a ''24'') y otro ''<select>'' donde se debe seleccionar los minutos (los valores posibles serán ''0'', ''15'', ''30'', ''45'').
Cuando los datos lleguen al servidor, se deberá indicar la hora elegida en lenguaje natural. Por ejemplo:
'''
La cita se ha elegido a las seis y media de la mañana.
La cita se ha elegido a las diez menos cuarto de la noche.
La cita se ha elegido a la una en punto de la tarde.
'''

Para saber si es de mañana, de tarde o de noche se utilizarán los tramos horarios de 6 a 12, de 13 a 20 y de 21 a 5 respectivamente. Los minutos no se tendrán en cuenta.

**Ejercicio 4:** Se desea modificar uno de los ejercicios de la relación anterior para considerar las horas extras. Escribe una aplicación web que contenga un formulario con tres campos: número de horas realizadas ese mes, precio de las horas ordinarias y precio de las horas extraordinarias.
Los datos se recibirán en el servidor, si no se recibe el precio de las horas ordinarias se considerará que el precio es 15 euros la hora. Si no se indica el precio de las horas extraordinarias, se considerará que se pagan a 18 euros. El servidor deberá calcular el salario mensual del trabajador sabiendo que las horas ordinarias son las primeras 40. A partir de ahí se considerarán horas extraordinarias.

**Ejercicio 5:** Crea una web que mande al servidor tres números que serán las notas de un alumno, calculará la nota media e indicará también si la nota obtenida es insuficiente (<5), suficiente (>=5 y <6), bien (>=6 y <7), notable (>=7 y <9) o sobresaliente (>=9 y <=10). Los números deben estar, por tanto, comprendidos entre 0 y 10. En caso contrario, se mostrará un mensaje de error y se terminará.

**Ejercicio 6:** Crea un programa que reciba una cadena de caracteres y nos indique si es un palíndromo (nota: puedes usar la función ''strrev'').



== ocultar ==

===== Ejercicio para entregar =====

Haz una web que muestre un formulario con 5 preguntas cortas sobre el contenido que hemos visto de PHP, el usuario deberá contestar las cinco preguntas y mandar sus respuestas al servidor. El servidor contestará indicando el número de respuestas correctas y la puntuación total obtenida (2 puntos por cada respuesta correcta, -1 punto por cada pregunta fallada).

== finocultar ==
